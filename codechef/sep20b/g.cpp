#include <bits/stdc++.h>
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL)
#define endl '\n'
#define int long long int
using namespace std;
#define pii pair <int, int>
#define mii map<int, int>
#define pb push_back
#define deb(x) cout << #x << " " << x << endl;
#define deb2(x, y) cout << #x << " " << x << " " << #y << " " << y << endl;
#define pt(a) cout << a << endl;
#define ptt(a, b) cout << a << " " << b << endl;
#define ptf(a) cout << a << " ";
#define rd(a) cin >> a;
#define rdd(a, b) cin >> a >> b;
#define loop(s, e, itr) for (int itr = s; itr < e; itr++)
#define lop(n) for(int i = 0; i < n; i++)
#define lopj(n) for(int j = 0; j < n; j++)
#define lopk(n) for(int k = 0; k < n; k++)
#define vin vector<int>
#define w(flag) int tc = 1; if(flag) cin >> tc; for(int t = 1; t <= tc; t++)
#define vec vector
#define mod 1000000007
#define all(x) x.begin(), x.end()
#define elif else if
#define nline cout << endl;
//_________________________________ðŸ˜ŒðŸ˜Œ SAB MOH MAYA HAIðŸ˜ŒðŸ˜Œ____________________________________________







int ar[1000006] = {0};
int n = 0, k;
int tp(0), tp1(0), tp2(0), tp3(0), tp4(0);
string str;
int len;
void pre_processing(){}
//____________________________________ðŸ˜‹Coding just for funðŸ˜‹____________________________________________

void fun1()
{
    rd(n)
    int s = (n*(n+1))/2;
    cout << (s%2) << endl;
    int req = s/2;
    int mx = n;
    vec<bool> ok(n+1, true);
    while(req > 0)
    {
        if(req > mx)
        {
            ok[mx] = 0;
            req -= mx;
            mx--;
        }
        else
        {
            ok[req] = 0;
            req = 0;
        }
    }
    for(int i = 1; i <= n; i++)
        cout << ok[i];
    cout << endl;

}

void fun2()
{
    set<int> not_reachable = {2,3,6,7,8,11,12,15,18,19,22,23,24,27,28,31,32,33,43,44,47,48,60,67,72,76,92,96,108,112,128};
    rd(n)
    if(n == 1)
    {
        cout << "1\n1\n";
    }
    else if(n == 2)
    {
        cout << "3\n01\n";
    }
    else if(n == 3)
    {
        cout << "4\n110\n";
    }
    else if(n == 4)
    {
        cout << "2\n1110\n";
    }
    else if(n == 5)
    {
        cout << "3\n01001\n";
    }
    else
    {
        int req = (n*(n+1)*(2*n+1))/12;
        int req1 = req;
        int can = n;
        int sum = 0;
        vector<bool> ans(n+1, true);
        while(req > 0 and can > 0)
        {
            if(can*can > req)
                can--;
            else if(can*can == req) 
            {
                // pt(can)
                ans[can] = false;
                sum += can*can;
                req = 0;
                can = 0;
            }
            else
            {
                tp = req-can*can;
                if(not_reachable.find(tp) == not_reachable.end())
                {
                    // pt(can)
                    ans[can] = false;
                    sum += can*can;
                    can--;
                    req = tp;
                }
                else
                {
                    can--;
                }
            }
        }  
        int x = ((n*(n+1)*(2*n+1))/6)-sum;
        cout << abs(sum-x) << endl;     
        for(int i = 1; i <= n; i++)
            cout << ans[i];
        cout << endl;
    }
}

class BinOp
{
    public:
        string toBinary(int a)
        {
            string ans = "";
            while(a)
            {
                if(a%2)
                    ans += '1';
                else 
                    ans += '0';
                
                a/=2;
            }
            reverse(all(ans));
            return ans;
        }

        int toInt(string bin)
        {
            reverse(all(bin));
            int ans = 0;
            int len = bin.length();
            for(int i = 0; i < len; i++)
            {
                if(bin[i] == '1')
                    ans += pow(2, i);
            }
            return ans;
        }

};


BinOp bp;


vector<pair<string, pii>> anss;

bool comp(pair<string, pii> a, pair<string, pii> b)
{
    if(abs(a.second.first-a.second.second) == abs(b.second.first-b.second.second))
        return a.first > b.first;
    return abs(a.second.first-a.second.second) <  abs(b.second.first-b.second.second);
}


int go(int i, int a)
{
    if(i > n)
    {
        int x = 0, y = 0;
        for(int p = 1; p <= n; p++)
        {
            if(a&(1<<p))
                x += p*p*p;
            else
                y += p*p*p;
        }
        str = bp.toBinary(a);
        str = str.substr(0, str.length()-1);
        while(str.length() < n)
            str = '0' + str;
        anss.push_back({str, {x,y}});
    }
    else
    {
        go(i+1, a);
        go(i+1, a+(1<<i));
    }
}


void fun31()
{
    anss.clear();
    go(1,0);
    sort(all(anss), comp);
    // reverse(all(anss));
    cout << abs((anss[0].second.first - anss[0].second.second)) << endl << anss[0].first << endl;

}


void fun3(){
    set<int> st = {
                              1545, 1546, 1550, 1551, 1552, 1553, 1554, 1558, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1570, 1571, 1572, 1573, 1578, 1579, 1580, 1581, 1588, 1589, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1605, 1606, 1607, 1608, 1613, 1614, 1615, 1616, 1621, 1622, 1625, 1626, 1627, 1628, 1629, 1630, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1644, 1652, 1653, 1660, 1661, 1662, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1677, 1678, 1679, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1695, 1696, 1697, 1698, 1703, 1704, 1705, 1706, 1713, 1714, 1715, 1716, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1731, 1732, 1733, 1734, 1735, 1740, 1741, 1742, 1743, 1750, 1751, 1752, 1753, 1754, 1758, 1759, 1760, 1761, 1762, 1767, 1768, 1769, 1770, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1797, 1798, 1803, 1804, 1805, 1806, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1822, 1823, 1824, 1825, 1830, 1831, 1832, 1833, 1837, 1838, 1839, 1840, 1841, 1842, 1845, 1846, 1847, 1848, 1849, 1850, 1857, 1858, 1859, 1860, 1866, 1867, 1868, 1869, 1874, 1875, 1876, 1877, 1884, 1885, 1886, 1887, 1893, 1894, 1895, 1896, 1897, 1901, 1902, 1903, 1904, 1905, 1906, 1909, 1910, 1911, 1912, 1913, 1914, 1921, 1922, 1923, 1924, 1929, 1930, 1931, 1932, 1936, 1937, 1938, 1939, 1940, 1941, 1948, 1949, 1950, 1951, 1956, 1957, 1958, 1959, 1964, 1965, 1966, 1967, 1970, 1974, 1975, 1978, 1983, 1984, 1985, 1986, 1987, 1991, 1992, 1993, 1994, 1999, 2000, 2001, 2002, 2005, 2006, 2011, 2012, 2013, 2014, 2019, 2020, 2021, 2022, 2026, 2027, 2028, 2029, 2030, 2031, 2034, 2038, 2039, 2046, 2047, 2048, 2049, 2054, 2055, 2056, 2057, 2058, 2062, 2063, 2064, 2065, 2066, 2074, 2075, 2076, 2082, 2083, 2084, 2085, 2089, 2090, 2091, 2092, 2093, 2101, 2102, 2103, 2109, 2110, 2111, 2112, 2113, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2126, 2127, 2128, 2129, 2130, 2138, 2139, 2140, 2146, 2147, 2148, 2149, 2153, 2154, 2155, 2156, 2157, 2165, 2166, 2167, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2188, 2189, 2190, 2191, 2199, 2200, 2201, 2202, 2203, 2207, 2208, 2209, 2210, 2215, 2216, 2217, 2218, 2226, 2227, 2228, 2229, 2230, 2234, 2235, 2236, 2237, 2238, 2239, 2243, 2244, 2245, 2246, 2247, 2252, 2253, 2254, 2255, 2263, 2264, 2265, 2266, 2271, 2272, 2273, 2274, 2279, 2280, 2281, 2282, 2290, 2291, 2292, 2293, 2294, 2298, 2299, 2300, 2301, 2302, 2307, 2308, 2309, 2310, 2317, 2318, 2321, 2325, 2326, 2327, 2328, 2329, 2334, 2335, 2336, 2337, 2342, 2343, 2344, 2345, 2354, 2355, 2356, 2362, 2363, 2364, 2369, 2370, 2371, 2372, 2377, 2381, 2382, 2385, 2389, 2390, 2391, 2397, 2398, 2399, 2405, 2406, 2407, 2408, 2415, 2416, 2417, 2418, 2419, 2424, 2425, 2426, 2427, 2432, 2433, 2434, 2435, 2442, 2443, 2444, 2445, 2446, 2450, 2451, 2452, 2453, 2454, 2455, 2459, 2460, 2461, 2462, 2463, 2469, 2470, 2471, 2472, 2479, 2480, 2481, 2482, 2487, 2488, 2489, 2490, 2496, 2497, 2498, 2499, 2506, 2507, 2508, 2509, 2510, 2514, 2515, 2516, 2517, 2518, 2519, 2523, 2524, 2525, 2526, 2531, 2532, 2533, 2534, 2542, 2543, 2544, 2545, 2550, 2551, 2552, 2553, 2558, 2559, 2560, 2561, 2569, 2570, 2571, 2577, 2578, 2579, 2586, 2587, 2588, 2594, 2595, 2596, 2597, 2598, 2606, 2614, 2615, 2621, 2622, 2623, 2624, 2625, 2633, 2634, 2635, 2641, 2642, 2643, 2650, 2651, 2652, 2658, 2659, 2660, 2661, 2662, 2667, 2668, 2669, 2670, 2677, 2678, 2679, 2685, 2686, 2687, 2688, 2689, 2690, 2694, 2695, 2696, 2703, 2704, 2712, 2713, 2714, 2715, 2720, 2721, 2722, 2723, 2726, 2727, 2731, 2734, 2740, 2741, 2742, 2748, 2749, 2750, 2751, 2754, 2758, 2759, 2760, 2767, 2768, 2775, 2776, 2777, 2778, 2785, 2786, 2787, 2790, 2794, 2795, 2802, 2803, 2804, 2805, 2810, 2811, 2812, 2813, 2814, 2818, 2822, 2830, 2831, 2832, 2837, 2838, 2839, 2840, 2841, 2845, 2846, 2849, 2850, 2857, 2858, 2859, 2866, 2867, 2868, 2874, 2875, 2876, 2883, 2884, 2885, 2886, 2893, 2894, 2895, 2901, 2902, 2903, 2910, 2911, 2912, 2919, 2920, 2928, 2929, 2930, 2931, 2936, 2937, 2938, 2939, 2947, 2956, 2957, 2958, 2964, 2965, 2966, 2967, 2974, 2975, 2983, 2984, 2992, 2993, 2994, 3000, 3001, 3002, 3010, 3011, 3019, 3020, 3021, 3022, 3027, 3028, 3029, 3030, 3031, 3037,
                              3038, 3039, 3045, 3046, 3047, 3054, 3055, 3056, 3057, 3062, 3063, 3064, 3065, 3066, 3073, 3074, 3082, 3083, 3084, 3090, 3091, 3092, 3100, 3101, 3109, 3110, 3111, 3118, 3119, 3126, 3127, 3128, 3137, 3138, 3145, 3146, 3147, 3148, 3153, 3154, 3155, 3156, 3164, 3165, 3172, 3173, 3174, 3175, 3180, 3181, 3182, 3183, 3188, 3189, 3190, 3191, 3199, 3200, 3201, 3202, 3208, 3209, 3210, 3216, 3217, 3218, 3226, 3227, 3228, 3229, 3235, 3236, 3237, 3238, 3243, 3244, 3245, 3246, 3252, 3253, 3254, 3255, 3263, 3266, 3271, 3272, 3273, 3274, 3279, 3280, 3281, 3282, 3290, 3293, 3298, 3299, 3300, 3301, 3306, 3307, 3308, 3309, 3316, 3317, 3324, 3325, 3326, 3327, 3335, 3336, 3343, 3344, 3353, 3354, 3362, 3363, 3364, 3370, 3371, 3372, 3380, 3388, 3391, 3396, 3397, 3398, 3399, 3405, 3406, 3407, 3415, 3418, 3419, 3423, 3424, 3425, 3426, 3432, 3433, 3434, 3442, 3443, 3444, 3450, 3451, 3452, 3460, 3461, 3462, 3469, 3470, 3471, 3479, 3487, 3488, 3489, 3490, 3496, 3497, 3498, 3506, 3514, 3515, 3516, 3517, 3518, 3523, 3524, 3525, 3526, 3531, 3532, 3533, 3534, 3542, 3543, 3551, 3552, 3553, 3559, 3560, 3561, 3569, 3570, 3578, 3586, 3587, 3588, 3594, 3595, 3596, 3614, 3615, 3621, 3622, 3623, 3641, 3642, 3649, 3650, 3651, 3652, 3657, 3658, 3659, 3660, 3667, 3668, 3676, 3677, 3678, 3679, 3685, 3686, 3687, 3694, 3695, 3703, 3707, 3712, 3713, 3714, 3715, 3720, 3721, 3722, 3728, 3734, 3739, 3740, 3741, 3742, 3747, 3748, 3749, 3750, 3755, 3758, 3763, 3766, 3767, 3775, 3776, 3777, 3785, 3786, 3793, 3794, 3802, 3803, 3804, 3805, 3811, 3812, 3813, 3819, 3830, 3831, 3832, 3837, 3838, 3839, 3840, 3857, 3858, 3866, 3867, 3868, 3874, 3875, 3876, 3883, 3884, 3885, 3893, 3894, 3901, 3902, 3903, 3910, 3911, 3918, 3919, 3928, 3929, 3930, 3931, 3937, 3938, 3955, 3956, 3957, 3958, 3964, 3965, 3966, 3974, 3982, 3983, 3992, 4000, 4001, 4002, 4008, 4009, 4010, 4019, 4022, 4027, 4028, 4029, 4030, 4035, 4036, 4037, 4038, 4045, 4046, 4054, 4055, 4056, 4063, 4064, 4065, 4071, 4072, 4073, 4082, 4090, 4091, 4092, 4098, 4099, 4100, 4101, 4106, 4109, 4126, 4127, 4128, 4133, 4134, 4135, 4136, 4153, 4154, 4155, 4162, 4163, 4171, 4172, 4180, 4181, 4189, 4190, 4191, 4197, 4198, 4199, 4216, 4217, 4218, 4224, 4225, 4226, 4243, 4244, 4245, 4246, 4251, 4252, 4253, 4254, 4259, 4260, 4261, 4262, 4271, 4279, 4280, 4281, 4287, 4288, 4289, 4298, 4306, 4307, 4314, 4315, 4316, 4317, 4323, 4324, 4325, 4343, 4344, 4350, 4351, 4352, 4370, 4371, 4378, 4379, 4380, 4386, 4387, 4388, 4396, 4397, 4405, 4406, 4407, 4413, 4414, 4415, 4423, 4431, 4432, 4441, 4442, 4449, 4450, 4468, 4469, 4470, 4471, 4476, 4477, 4478, 4479, 4487, 4495, 4496, 4505, 4506, 4514, 4522, 4523, 4532, 4533, 4534, 4540, 4541, 4542, 4559, 4560, 4561, 4566, 4567, 4568, 4569, 4574, 4582, 4586, 4594, 4602, 4603, 4604, 4612, 4613, 4621, 4630, 4631, 4639, 4640, 4647, 4648, 4657, 4658, 4666, 4667, 4684, 4685, 4693, 4694, 4695, 4703, 4711, 4722, 4729, 4730, 4737, 4738, 4756, 4757, 4758, 4764, 4765, 4766, 4773, 4774, 4775, 4792, 4793, 4799, 4800, 4801, 4802, 4819, 4820, 4827, 4828, 4829, 4837, 4847, 4855, 4856, 4857, 4862, 4863, 4864, 4865, 4874, 4882, 4883, 4884, 4891, 4892, 4893, 4900, 4901, 4909, 4910, 4911, 4918, 4919, 4927, 4945, 4946, 4954, 4972, 4973, 4974, 4980, 4981, 4982, 4983, 4988, 4991, 5008, 5009, 5010, 5018, 5035, 5036, 5037, 5044, 5045, 5052, 5053, 5054, 5071, 5072, 5079, 5080, 5081, 5098, 5099, 5100, 5107, 5108, 5116, 5125, 5126, 5134, 5135, 5143, 5162, 5163, 5170, 5171, 5189, 5190, 5197, 5198, 5199, 5207, 5215, 5216, 5224, 5225, 5234, 5242, 5243, 5250, 5251, 5252, 5261, 5270, 5287, 5288, 5297, 5314, 5315, 5323, 5342, 5350, 5369, 5386, 5387, 5395, 5396, 5405, 5406, 5413, 5414, 5422, 5423, 5431, 5432, 5459, 5478, 5486, 5494, 5495, 5521, 5522, 5555, 5566, 5593, 5602, 5603, 5611, 5612, 5619, 5620, 5621, 5630, 5638, 5639, 5640, 5646, 5647, 5648, 5675, 5702, 5710, 5711, 5737, 5738, 5764, 5765, 5773, 5782, 5783, 5791, 5799, 5800, 5809, 5810, 5818, 5827, 5828, 5836, 5837, 5854, 5855, 5863, 5864, 5882, 5891, 5892, 5899, 5900, 5909, 5918, 5919, 5926, 5927, 5944, 5945, 5946, 5953, 5954, 5971, 5972, 5973, 5981, 5989, 5990, 5999, 6017, 6026, 6034, 6037, 6044, 6045, 6052, 6053, 6071, 6079, 6098, 6115, 6116, 6124, 6125, 6134, 6135, 6142, 6143, 6151, 6160, 6161, 6170, 6178, 6188, 6197, 6205, 6206, 6207, 6215, 6224, 6225, 6234, 6242, 6250, 6251, 6261, 6269, 6270, 6276, 6295, 6303, 6322, 6331, 6332, 6340, 6341, 6359, 6367, 6368, 6386, 6394, 6395, 6413, 6421, 6422, 6431, 6439, 6458, 6459, 6465, 6466, 6485, 6486, 6493, 6494, 6502, 6520, 6521, 6529, 6547, 6548, 6549, 6555, 6556, 6557, 6575, 6576, 6583, 6584, 6602, 6610, 6611, 6619, 6628, 6629, 6638, 6646, 6647, 6654, 6655, 6673, 6674, 6675, 6682, 6702, 6710, 6711, 6718, 6719, 6737, 6738, 6746, 6763, 6773, 6781, 6782, 6799, 6800, 6808, 6809, 6827, 6836, 6837, 6844, 6845, 6854, 6863, 6864, 6871, 6872, 6891, 6898, 6899, 6926, 6927, 6934, 6935, 6962, 6970, 6971, 6989, 6997, 6998, 7016, 7024, 7025, 7033, 7043, 7060, 7061, 7070, 7088, 7096, 7115, 7123, 7141, 7142, 7150, 7151, 7186, 7187, 7214, 7215, 7249, 7250, 7276, 7277, 7285, 7304, 7312, 7331, 7339, 7340, 7367, 7375, 7376, 7402, 7403, 7431, 7439, 7466, 7501, 7511, 7528, 7538, 7546, 7556, 7565, 7592, 7627, 7628, 7655, 7690, 7718, 7745, 7753, 7754, 7772, 7781, 7816, 7824, 7843, 7844, 7851, 7871, 7907, 7915, 7934, 7935, 7979, 8014, 8060, 8078, 8131, 8141, 8150, 8168, 8194, 8195, 8222, 8249, 8257, 8276, 8284, 8285, 8347, 8356, 8357, 8382, 8383, 8384, 8410, 8411, 8447, 8474, 8501, 8572, 8573, 8591, 8600, 8627, 8662, 8663, 8690, 8698, 8717, 8725, 8744, 8789, 8807, 8870, 8922, 8978, 8986, 9005, 9013, 9014, 9111, 9138, 9139, 9202, 9229, 9230, 9257, 9284, 9293, 9320, 9355, 9419, 9446, 9473, 9482, 9742, 9806, 9896, 9922, 9923, 9959, 9986, 10013, 10048, 10112, 10138, 10175, 10202, 10391, 10777, 10867, 10931, 10958, 11147, 11659, 11687, 11750, 11777, 11903, 11911, 12101, 12478, 12506, 12695, 12758};
    rd(n)
    if(n < 12)
    {
        fun31();
        return;
    }
    int req = (n*(n+1.0))/2;
    req *= req;
    req/=2;
    int can = n;
    int req1 = req;
    vec<bool> ans(n+1, true);
    int sum = 0;
    while(req > 0 and can > 0)
    {
        if(can*can*can <= req)
        {
            tp = req-(can*can*can);
            if(st.find(tp) == st.end())
            {
                req = tp;
                sum += (can*can*can);
                // deb(can)
                ans[can] = false;
            }
        }
        can--;
    }
    int x = ((n*(n+1)/2)*(n*(n+1)/2))-sum;
    cout << abs(sum-x) << endl;     
    for(int i = 1; i <= n; i++)
        cout << ans[i];
    nline
    
}



void solve()
{
    if(k == 1)
    {
        fun1();
    }
    else if(k == 2)
    {
        fun2();
    }
    else if(k == 3)
    {
        fun3();
    }
}

int32_t main()
{
    fastio;
    pre_processing();
    rd(k)
    w(true)
    {
        // cout << "Case #" << t << ": ";
        solve();
    }
    return 0;
}